version: "3.8"
services:
  redis:
    image: "redis"
    container_name: "redis_con"
    profiles:
      - production

  db:
    image: "postgres:14"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    container_name: "postgresql_con"
    profiles:
      - production

  controller:
    build: ./controller
    command: uvicorn emulator:app --host 0.0.0.0 --port 8001
    volumes:
      - ./controller/src:/project_dir
    container_name: "controller_con"
    profiles:
      - production

  main_server:
    build: ./main
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      LOG_LEVEL: "${LOG_LEVEL}"
    command: uvicorn meteostation.asgi:application --host 0.0.0.0 --port 8000 --lifespan off
    volumes:
      - ./main/src:/project_dir
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    container_name: "main_server_con"
    profiles:
      - production

  celery_worker:
    build: ./main
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      LOG_LEVEL: "${LOG_LEVEL}"
    command: celery -A meteostation worker --loglevel=${LOG_LEVEL}
    volumes:
      - ./main/src:/project_dir
    depends_on:
      - db
      - redis
      - controller
      - main_server
    container_name: "celery_worker_con"
    profiles:
      - production

  celery_beat:
    build: ./main
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      LOG_LEVEL: "${LOG_LEVEL}"
    command: celery -A meteostation beat --loglevel=${LOG_LEVEL}
    volumes:
      - ./main/src:/project_dir
    depends_on:
      - db
      - redis
      - main_server
      - controller
      - celery_worker
    container_name: "celery_beat_con"
    profiles:
      - production

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - main_server
    container_name: "frontend_con"
    profiles:
      - production

  main_tests:
    build: ./main
    command: python manage.py test
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      LOG_LEVEL: "${LOG_LEVEL}"
    volumes:
      - ./main/src:/project_dir
    container_name: "main_tests_con"
    profiles:
      - test


  controller_tests:
    build: ./controller
    command: pytest
    volumes:
      - ./controller/src:/project_dir
    container_name: "controller_tests_con"
    profiles:
      - test
